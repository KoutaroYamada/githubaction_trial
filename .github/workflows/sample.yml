on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

env:
  branch_name: ${{ github.head_ref || github.ref_name }}
  revision: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  sample:
    runs-on: ubuntu-latest

    steps:
      - name: sample
        uses: actions/github-script@v6
        with:
          script: |
            if ('${{ github.ref_type }}' == 'tag') {
              const stgDeployCommand = `
                \`\`\`shell
                gh workflow run hoge \\
                  -f branch_name=${{ env.branch_name }} \\
                  -f revision=${{ env.revision }} \\
                  --repo hoge
                \`\`\`
              `
            
              const prodDeployCommand = `
               \`-f approver\`に渡す\`XXX\`を実際の承認者に置き換えて実行してください。
                \`\`\`shell
                gh workflow run fuga \\
                  -f branch_name=${{ env.branch_name }} \\
                  -f revision=${{ env.revision }} \\
                  -f approver=XXX \\
                  --repo fuga
                \`\`\`
              `
            
              await core.summary
                .addHeading('Staging Deploy Command', 2)
                .addRaw(stgDeployCommand)
                .addHeading('Production Deploy Command', 2)
                .addRaw(prodDeployCommand)
                .write()
              return
            }
            
            const output1 = `ref_name: ${{ github.ref_name }}, head_ref: ${{ github.head_ref }} ブランチ名: ${{ github.head_ref || github.ref_name }} github.ref_type: ${{ github.ref_type }}` 
            const output2 = `github_sha: ${{ github.sha }}, github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }} リビジョン: ${{ github.event.pull_request.head.sha || github.sha }}`
            const output3 = `branch_name: ${{ env.branch_name }}, revision: ${{ env.revision }}`
            const deployCommand = `
               \`-f approver\`に渡す\`XXX\`を実際の承認者に置き換えて実行してください。
            
                \`\`\`shell
                gh workflow run hoge \\
                  -f branch_name=${{ env.branch_name }} \\
                  -f revision=${{ env.revision }} \\
                  -f approver=XXX \\
                  --repo fuga
                \`\`\`
              `
            
            await core.summary
              .addHeading('sample', 2)
              .addRaw(output1)
              .addHeading('sample2', 2)
              .addRaw(output2)  
              .addHeading('sample3', 2)
              .addRaw(output3)  
              .addHeading('sample4', 2)
              .addRaw(deployCommand)
              .write()
